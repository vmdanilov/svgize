#!/bin/sh

cmd="$(basename "$0")"
quality="75"
mask_quality="100"
mask_type="png"
output=""
embed=true

export PATH="$PATH:$(dirname "$0")"

if [ ! -x "$(command -v convert 2>/dev/null)" ]; then
    echo "ImageMagick is required."
    exit 1
fi

# Print usage info
usage() {
  echo "Usage: $cmd [options] image-file"
  echo "Options:"
  echo "  -h, --help                   Show this help message and exit"
  echo "  -q, --quality value[:value]  Set compression quality for layer and mask respectively (75:100)"
  echo "  -l, --link                   Save layer and mask separately, otherwise inline using base64 encoding"
  echo "  -o, --output name            Specify name for output file"
}

# Handle input
while :; do
  case $1 in
    -h | --help )
      usage
      exit 0
      ;;
    -q | --quality )
      quality="${2%%:*}"
      mask_quality="${2##*:}"
      mask_quality="${mask_quality:=$quality}"
      shift
      ;;
    -o | --output )
      output="$2"
      shift
      ;;
    -l | --link )
      embed=false
      ;;
    "" )
      usage
      exit 0
      ;;
    * )
    break
  esac
  shift
done

if [ "$#" -lt 1 ] || ([ ! -z "$output" ] && [ "$#" -gt 1 ]); then
    usage
    exit 1
fi

cmd_layer_magick() {
  convert - -set colorspace sRGB -background black -alpha background -alpha off -colorspace YUV -sampling-factor 4:2:0 -quality $quality jpeg:-
}

cmd_layer_mozjpeg() {
  convert - -set colorspace sRGB -background black -alpha background -alpha off ppm:- | cjpeg -quality $quality -sample 2x2
}

cmd_mask_magick() {
  convert - -set colorspace sRGB -alpha extract -colorspace gray -sampling-factor 4:4:4 -quality $quality jpeg:-
}

cmd_mask_mozjpeg() {
  convert - -set colorspace sRGB -alpha extract ppm:- | cjpeg -quality $mask_quality -grayscale -sample 1x1
}

cmd_mask_lossless() {
  convert - -set colorspace sRGB -alpha extract -colorspace gray -define png:compression-level=9 -define png:compression-filter=5 png:-
}


cmd_layer="cmd_layer_magick"
cmd_mask="cmd_mask_magick"

if [ -x "$(command -v cjpeg 2>/dev/null)" ] && [ ! -n "$(cjpeg -version 2>/dev/null | grep mozjpeg)" ]; then
  cmd_layer="cmd_layer_mozjpeg"
  cmd_mask="cmd_mask_mozjpeg"
fi

if [ "$mask_quality" -ge 100 ]; then
  cmd_mask="cmd_mask_lossless"
  mask_type="png"
else
  mask_type="jpeg"
fi

for file in "$@"; do
  outfile="${output:=${file%.*}.svg}"
	size=( $(identify -format '%w %h' "$file") )

  if $embed; then
    image="data:image/jpeg;base64,$(cat "$file" | $cmd_layer | base64)"
    mask="data:image/$mask_type;base64,$(cat "$file" | $cmd_mask | base64)"
  else
    image_file="$outfile-layer.jpg"
    mask_file="$outfile-mask.${mask_type/jpeg/jpg}"
    image="$(cat "$file" | $cmd_layer | cat >"$image_file" | echo $(basename "$image_file"))"
    mask="$(cat "$file" | $cmd_mask | cat >"$mask_file" | echo $(basename "$mask_file"))"
  fi

	cat >"$outfile" <<EOL
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="${size[0]}" height="${size[1]}" viewBox="0 0 ${size[0]} ${size[1]}">
    <defs>
        <mask id="m">
            <image width="100%" height="100%" xlink:href="$mask"/>
        </mask>
    </defs>
    <image mask="url(#m)" width="100%" height="100%" xlink:href="$image"/>
</svg>
EOL

done
